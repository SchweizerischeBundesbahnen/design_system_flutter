name: android_release
on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'autorelease')

    steps:
      - name: Generate Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APPBAKERYGITHUBAPP_APPID }}
          private-key: ${{ secrets.APPBAKERYGITHUBAPP_PRIVATEKEY }}

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Write Keystore from base64 encoded secret.
        id: write_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "fdsm_keystore.jks"
          fileDir: "./example/android/app/keys"
          encodedString: ${{ secrets.KEYSTORE_64 }}

      - name: Clone flutter version specified in .fvm.
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Run flutter doctor.
        run: flutter doctor -v

      - name: Install dependencies.
        run: flutter pub get
        working-directory: example

      - name: Build appbundle.
        run: flutter build appbundle --no-pub
        working-directory: example
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}

      - name: Create Signing Report.
        run: ./gradlew signingReport
        working-directory: example/android

      - name: Upload appbundle as artifact.
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          path: example/build/app/outputs/bundle/release/
          retention-days: 1

      - name: Write Google SA json from base64 encoded secret.
        id: write_google_sa
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "gp_service_account.json"
          fileDir: "./example/android/app/keys"
          encodedString: ${{ secrets.GOOGLE_PLAYSTORE_SERVICE_ACCOUNT_64 }}

      - name: Release using GPP.
        run: ./gradlew publishBundle --artifact-dir ../build/app/outputs/bundle/release/
        working-directory: example/android
